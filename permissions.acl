/** 
  Default rules
**/

rule rule36 {
    description: "Allow all participants access to all resources"
    participant: "ANY"
    operation: ALL
    resource: "org.acme.model.**"
    action: ALLOW
}

rule rule35 {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

/** Продавец
        - Определяет список товаров на продажу **/
rule SellerSetProductToSale {
    description: "Продавец Определяет список товаров на продажу"
    participant(p): "org.acme.model.Person"
    operation: ALL
    resource(r): "org.acme.model.Product"
    transaction(tx): "org.acme.model.setProductToSale"
    condition: (p.type == Buyer)
    action: ALLOW
}
/** Продавец
        - Видит проданные/непроданные товары **/
rule SellerSeeNotSoldProducts {
    description: "Продавец Видит проданные/непроданные товары"
    participant(p): "org.acme.model.Person"
    operation: READ
    resource: "org.acme.model.Product"
    condition: (p.type == Seller)
    action: ALLOW
}
/** Продавец и Покупатель 
    - могут просматривать баланс своего счета **/
rule OwnAccount {
    description: "Может просматривать баланс своего счета"
    participant(p): "org.acme.model.Person"
    operation: READ
    resource(r): "org.acme.model.Account"
    condition: (p == r.owner)
    action: ALLOW
}
/** Покупатель
        - Видит список выставленных на продажу товаров **/
rule BuyerSeeProductOnSale {
    description: "Покупатель Видит список выставленных на продажу товаров"
    participant(p): "org.acme.model.Person"
    operation: READ
    resource(r): "org.acme.model.Product"
    condition: (p.type == 'Buyer' && r.isOnSale == true && r.isBlocked == false)
    action: ALLOW
}


/** Покупатель
        - Выбирает товар и покупает
                - Отправляет запрос на блокировку товара
                - Делает запрос в банк **/
rule BuyerBlockProduct {
    description: "Отправляет запрос на блокировку товара"
    participant(p): "org.acme.model.Person"
    operation: UPDATE
    resource(r): "org.acme.model.Product"
    transaction(tx): "org.acme.model.Buy"
    condition: (p.type == 'Buyer' && r.isBlocked == false)
    action: ALLOW
}

/** Банк
        - Валидирует запросы от покупателя на покупку товара
            - Проверяет достаточность баланса
            - Проверят валидность блокировки товара **/
rule BankValidate {
    description: "Банк -Валидирует запросы от покупателя на покупку товара -Проверяет достаточность баланса"
    participant: "org.acme.model.Bank"
    operation: READ
    resource: "org.acme.model.Account"
    action: ALLOW
}
/** Банк
    - Проводит транзакцию:
        - Переводит деньги со счета покупателя на счет продавца **/
rule BankProcessTransactionAccounts {
    description: "Банк -Проводит транзакцию: -Переводит деньги со счета покупателя на счет продавца"
    participant: "org.acme.model.Bank"
    operation: UPDATE
    resource: "org.acme.model.Account"
    action: ALLOW
}
/** Банк
    - Проводит транзакцию:
        - Обновляет владельца товара **/
rule BankProcessTransactionProduct {
    description: "Банк -Проводит транзакцию: -Обновляет владельца товара"
    participant: "org.acme.model.Bank"
    operation: UPDATE
    resource: "org.acme.model.Product"
    action: ALLOW
}

/** - Банк
        - Видит детали счетов клиентов **/
rule BankSeeAllAccounts {
    description: "Видит детали счетов клиентов"
    participant: "org.acme.model.Bank"
    operation: READ
    resource: "org.acme.model.Account"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
